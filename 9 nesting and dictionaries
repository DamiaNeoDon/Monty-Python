student_scores = {
  "Harry": 81,
  "Ron": 78,
  "Hermione": 99, 
  "Draco": 74,
  "Neville": 62,
}

student_grades = {}


for student in student_scores:
    print(student)
    score =student_scores[student]
    if score >90:
        student_grades[student]= "outstanding"
    elif score >80:
        student_grades[student]="exceeds expectation"
    elif score >70:
        student_grades[student]="acceptable"
    else:
        student_grades[student]="fail" 
    


print(student_grades)





#Nesting a List in a Dictionary

travel_log = [
  {"France":
  "cities_visited":["Paris", "Lille", "Dijon"],
  "total_visits":12},
  {"Germany":
   ["Berlin", "Hamburg", "Stuttgart"],}
  {"USA":
  {"cities_visited":   ["Miami","Vegas","Los Angeles"],
  "total_visits":2},
  {"continent": "europe", 
  "countries_visited":["germany","holland"],
  "total_visits":5}, 
]
print(travel_log)

#Nesting Dictionary in a Dictionary

travel_log = {
  "France": {"cities_visited": ["Paris", "Lille", "Dijon"], "total_visits": 12},
  "Germany": {"cities_visited": ["Berlin", "Hamburg", "Stuttgart"], "total_visits": 5},
}

#Nesting Dictionaries in Lists

travel_log = [
{
  "country": "France", 
  "cities_visited": ["Paris", "Lille", "Dijon"], 
  "total_visits": 12,
},
{
  "country": "Germany",
  "cities_visited": ["Berlin", "Hamburg", "Stuttgart"],
  "total_visits": 5,
},
]





travel_log = [
{
  "country": "France",
  "visits": 12,
  "cities": ["Paris", "Lille", "Dijon"]
},
{
  "country": "Germany",
  "visits": 5,
  "cities": ["Berlin", "Hamburg", "Stuttgart"]
},
]

#TODO: Write the function that will allow new countries


def add_new_country(country_visited,times_visited,cities_visited):
    new_country={}
    new_country["country"]= country_visited
    new_country["visits"]= times_visited
    new_country["cities"]= cities_visited
    travel_log.append(new_country) 




add_new_country("Russia", 2, ["Moscow", "Saint Petersburg"])
print(travel_log)

